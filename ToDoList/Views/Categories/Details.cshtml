@{
  Layout = "_Layout";
}
@*  this using directive lets us use the Item model in our view, 
    alongside the Category model which we've specified as the main @model for this view *@
@using ToDoList.Models
@model ToDoList.Models.Category

<h2>Category Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

@if (Model.Items.Count == 0)
{
  <h3>No items have been added yet!</h3>
}
else
{
  <h3>Items:</h3>
  <ul>
    @foreach(Item item in Model.Items)
    {
      <li>@Html.ActionLink($"{item.Description}", "Details", "Items", new { id = item.ItemId })</li>
    }
  </ul>
}

<br/>
<p>@Html.ActionLink("Edit Category", "Edit", new { id = Model.CategoryId })</p>
<p>@Html.ActionLink("Delete Category", "Delete", new { id = Model.CategoryId })</p>
<p>@Html.ActionLink("Back to List", "Index")</p>

